<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codroc Blog</title>
  
  
  <link href="https://codroc.github.io/atom.xml" rel="self"/>
  
  <link href="https://codroc.github.io/"/>
  <updated>2021-03-06T04:55:40.276Z</updated>
  <id>https://codroc.github.io/</id>
  
  <author>
    <name>Codroc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello My Blog</title>
    <link href="https://codroc.github.io/2021/03/05/hello-blog/"/>
    <id>https://codroc.github.io/2021/03/05/hello-blog/</id>
    <published>2021-03-05T11:57:16.000Z</published>
    <updated>2021-03-06T04:55:40.276Z</updated>
    
    <content type="html"><![CDATA[<p>早就有自己搭建一个博客的想法了，之前总是想着从无到有的搭建方式，由于难度较大就没有完成。一直拖着也不是办法，就先用博客框架吧，以后自己学习完前后端的知识再从头搭一个把文章转过去就行。这里要感谢 <a href="https://hexo.io/">hexo</a> 让我轻松完成了博客的搭建！</p><p>记录下搭建的过程吧，嘿嘿~~~</p><span id="more"></span><ul><li>机器架构: <strong>x86_64</strong></li><li>操作系统: <strong>18.04.1-Ubuntu</strong></li></ul><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><ul><li>安装 npm，可以去 github 上搜索 <a href="https://github.com/npm/npm">npm</a>，仓库的 README 有给出安装方式<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -qL https://www.npmjs.com/install.sh | sh</span><br></pre></td></tr></table></figure></li><li>安装并启动博客<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>Run server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>当出现以下输出时：<strong>INFO  Hexo is running at <a href="http://localhost:4000/">http://localhost:4000</a> . Press Ctrl+C to stop.</strong> 就可以在浏览器上输入 <code>https://localhost:4000</code> 来访问博客了！<br>More info: <a href="https://hexo.io/docs/server.html">Server</a></li></ul><h2 id="美化博客"><a href="#美化博客" class="headerlink" title="美化博客"></a>美化博客</h2><p>挑选主题</p><ul><li>可以去 hexo 官网的 <a href="https://hexo.io/themes/">Themes</a> 菜单下挑选自己喜欢的主题</li><li>也可以去 github 搜索 hexo 然后选那些 star 比较多的主题</li></ul><p>挑选完毕之后，就需要把主题下载到本地的 <code>blog/themes</code> 目录下，例如我挑了个 <a href="https://github.com/iissnan/hexo-theme-next">hexo-theme-next</a> 主题，切换到 <code>blog/</code> 目录下并执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>Rerun Server 通过浏览器就能看到博客已经被美化了</p><h2 id="个人信息设置"><a href="#个人信息设置" class="headerlink" title="个人信息设置"></a>个人信息设置</h2><p>这个环节需要了解 2 个配置文件</p><ol><li><code>blog/</code> 目录下的 <code>_config.yml</code> 是用来配置站点信息的，例如可以改变博客网站的 Title，加上个人 Logo 等等</li><li><code>blog/themes/主题/</code> 目录下的 <code>_config.yml</code> 是用来配置主题的，例如设置导航栏，设置 SideBar 等等</li></ol><p>如果想要了解 <code>_config.yml</code> 中每个 Setting 信息，可以去 <a href="https://hexo.io/docs/configuration">hexo-config</a> 网站看看</p><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><p><strong>hexo</strong> 是一个静态博客框架，也就是说客户端发出请求后，服务器仅仅是将静态页面作为响应发送回去，并不涉及数据库的访问等等。因此在我们写好一篇博客后就可以让 css、js 进行渲染直接生成静态的 html</p><p>生成静态文件的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>执行完上述命令后，可以看到在 <code>blog/</code> 目录下多了个 <code>public/</code> 目录，这里面存储的就是静态文件了！</p><p>可以通过 <code>hexo clean</code> 命令删除 <code>public/</code> 目录</p><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h2 id="网站部署"><a href="#网站部署" class="headerlink" title="网站部署"></a>网站部署</h2><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。</p><p>我把博客网站架在了 github 上。</p><p>在这一步很容易犯错导致最后部署失败。</p><ol><li>首先在 github 创建一个仓库，为了 100% 成功仓库名一定要是 <code>username.github.io</code> 其中 <code>username</code> 就是你 github 的用户名</li><li>配置 <code>blog/</code> 目录下的 <code>_config.yml</code> 文件，有两部分需要编辑<ul><li>找到 <code>_config.yml</code> 中的注释 <code>#Deployment</code> （如果没有就自己在文件最后加上），然后添加以下内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Deployment</span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io</span><br><span class="line">root: &#x2F;</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>注意：<strong>branch</strong> 需要看你创建的仓库的<strong>默认 branch</strong> 是什么再填写，我的<strong>默认 branch</strong> 是 <strong>master</strong>（有的可能是 <strong>main</strong>）</li><li>找到 <code>_config.yml</code> 中的注释 <code>#URL</code> （如果没有就自己加上），然后添加以下内容：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;</span><br><span class="line">url: https:&#x2F;&#x2F;username.github.io&#x2F;   # 这里是你的仓库名</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br></pre></td></tr></table></figure>注意：如果你完全按照第 1 步的步骤，那么 url 的 username 就是你的 github 用户名</li></ul></li></ol><p>保存站点配置文件</p><p>其实就是给 <strong>hexo d</strong> 这个命令做相应的配置，让 hexo 知道你要把 blog 部署在哪个位置，很显然，我们部署在我们 github 的仓库里。最后安装 Git 部署插件，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这时，我们分别输入三条命令一键完成部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>其实第三条的 hexo d 就是部署网站命令，d 是 deploy 的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <code>http://xxxx.github.io</code> 其中 <code>xxx</code> 就是你的 github 用户名</p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>我们开始正式发布博客文章，在命令行中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">&quot;博客的名字&quot;</span></span><br></pre></td></tr></table></figure><p>我们会发现在 <code>blog/source/</code> 目录下的 <code>_post/</code> 目录中多了一个 <code>博客名字.md</code> 文件，使用 <strong>Markdown编辑器</strong> 打开，就可以开始你的个人博客之旅了，<strong>Markdown</strong> 常用的样式也就十来种，完全能够满足一般博文的样式要求。</p><p>通过带有预览样式的 <strong>Markdown</strong> 编辑器实时预览书写的博文样式，也可以通过命令 <strong>hexo s –debug</strong> 在本地浏览器的 <strong>localhost:4000</strong> 预览博文效果。写好博文并且样式无误后，通过 <strong>hexo g &amp;&amp; hexo d</strong> 生成、部署网页。随后可以在浏览器中输入域名浏览。</p><p>以后写好的文章只要拖到 <code>blog/source/_post/</code> 目录下，<strong>hexo</strong> 会自动把文章渲染出来放到你的博客网站上</p><h2 id="添加后台管理插件-hexo-admin"><a href="#添加后台管理插件-hexo-admin" class="headerlink" title="添加后台管理插件 hexo-admin"></a>添加后台管理插件 hexo-admin</h2><p>如果没有后台管理功能每次写完 markdown 文章都需要放到 <code>blog/source/_post</code> 目录下并且 <code>hexo g &amp;&amp; hexo d</code> 来重新生成、部署网页，这样做有点麻烦，所以可以搞个 <a href="https://github.com/jaredly/hexo-admin">hexo-admin</a> 插件来帮助我们。</p><p>切换到根目录 <code>blog/</code>，安装 <a href="https://github.com/jaredly/hexo-admin">hexo-admin</a> 插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-admin</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>用浏览器打开 <code>http://localhost:4000/admin/</code> 就能看到 <strong>后台UI</strong> 了！现在还没有创建用户密码，所以别人是能直接进入你的后台的，那么哪一天你一上自己的网站发现小广告漫天飞可不要感到奇怪哦~~~ 所以在后台的 Setting 中创建一个用户吧！最后把</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">    username: username</span><br><span class="line">    password_hash: xxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">    secret: a secret something</span><br></pre></td></tr></table></figure><p>复制到 <code>blog/</code> 目录下的 <code>_config.yml</code> 文件的最后面就可以了。这样别人就不能随便进入你的后台了！</p><p>以后通过后台写完文章后可以点击 <code>Deploy</code> 菜单来提交。</p><p>但是我按了 <code>Deploy</code> 没反应是怎么回事？</p><p>原来是进入后台之后点击 Deploy，里面的 Deploy 按钮是用来执行发布脚本的，所以我们先在博客根目录下新建个目录 admin_script，然后在目录中新建一个脚本 hexo-g.sh，里面写下下面代码然后保存:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>然后给 hexo-g.sh 加入可执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x hexo-g.sh</span><br></pre></td></tr></table></figure><p>然后在 <strong>_config.yml</strong> 中的 admin 下添加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">    username: username</span><br><span class="line">    password_hash: xxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">    secret: a secret something</span><br><span class="line">    deployCommand: .&#x2F;admin_script&#x2F;hexo-d.sh</span><br></pre></td></tr></table></figure><p>再按下 <code>Deploy</code> 按钮，果然可以发布了！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;早就有自己搭建一个博客的想法了，之前总是想着从无到有的搭建方式，由于难度较大就没有完成。一直拖着也不是办法，就先用博客框架吧，以后自己学习完前后端的知识再从头搭一个把文章转过去就行。这里要感谢 &lt;a href=&quot;https://hexo.io/&quot;&gt;hexo&lt;/a&gt; 让我轻松完成了博客的搭建！&lt;/p&gt;
&lt;p&gt;记录下搭建的过程吧，嘿嘿~~~&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
